<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="ingest">

	<!-- Note that tempTableName is built on user-supplied data and must be sanitized to prevent possible
		 sql injection. This sanitizing is done by CrawlerSource.getTableName and within the function. -->

	<update id="linkPoint" >
		select nldi_data.ingest_link_point(#{tempTableName,jdbcType=VARCHAR})
	</update>

	<!-- Note that tempTableName is built on user-supplied data and must be sanitized to prevent possible
		 sql injection. This sanitizing is done by CrawlerSource.getTableName and within the function. -->

	<update id="linkReachMeasure" >
		select nldi_data.ingest_link_reach_measure(#{tempTableName,jdbcType=VARCHAR})
	</update>

	<!-- Note that tempTableName is built on user-supplied data and must be sanitized to prevent possible
		 sql injection. This sanitizing is done by CrawlerSource.getTableName and within the function. -->

	<delete id="truncate">
		select nldi_data.ingest_truncate(#{tempTableName,jdbcType=VARCHAR})
	</delete>

	<!-- Note that tempTableName, tableName, and oldTableName are built on user-supplied data and
	     must be sanitized to prevent possible sql injection. This sanitizing is done by CrawlerSource.getTableName and within the function. -->

	<update id="install">
		select nldi_data.ingest_install(#{tableName,jdbcType=VARCHAR}, #{tempTableName,jdbcType=VARCHAR}, #{oldTableName,jdbcType=VARCHAR})
	</update>

</mapper>